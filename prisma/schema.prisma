generator client {
    provider = "prisma-client-js"
    output   = "../node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    telegramId BigInt  @unique
    username   String? @unique
    firstName  String
    lastName   String?

    balance  Balance?
    energy   Energy?
    boosts   Boosts?
    upgrades Upgrades?

    @@index([telegramId])
    @@index([id])
}

model Balance {
    id            String @id @default(cuid())
    userId        String @unique
    user          User   @relation(fields: [userId], references: [id])
    balance       Int    @default(0)
    balanceAmount Int    @default(1)
}

model Energy {
    id                   String   @id @default(cuid())
    userId               String   @unique
    user                 User     @relation(fields: [userId], references: [id])
    energy               Int      @default(1000)
    maxEnergy            Int      @default(1000)
    energyAmount         Int      @default(1)
    energyRecoveryAmount Int      @default(1)
    lastEnergyUpdate     DateTime @default(now())
}

model Boosts {
    id                     String   @id @default(cuid())
    userId                 String   @unique
    user                   User     @relation(fields: [userId], references: [id])
    quantityEnergyBoost    Int      @default(3)
    maxQuantityEnergyBoost Int      @default(3)
    lastEnergyBoostUpdate  DateTime @default(now())
    quantityTurboBoost     Int      @default(3)
    maxQuantityTurboBoost  Int      @default(3)
    lastTurboBoostUpdate   DateTime @default(now())
    isTurboBoostActive     Boolean  @default(false)
}

model Upgrades {
    id               String @id @default(cuid())
    userId           String @unique
    user             User   @relation(fields: [userId], references: [id])
    multitapLevel    Int    @default(0)
    multitapPrice    Int    @default(100)
    energyLimitLevel Int    @default(0)
    energyLimitPrice Int    @default(100)
}
